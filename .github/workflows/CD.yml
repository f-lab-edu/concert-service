name: CD to DockerHub and Naver Cloud

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # GitHub 저장소 체크아웃
      - name: Checkout source
        uses: actions/checkout@v4

      # JDK 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # CI에서 업로드된 JAR 다운로드
      - name: Download JAR artifacts from CI
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: jars

      # DockerHub 로그인
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # zariyo-main Docker 이미지 빌드 및 푸시
      - name: Build & Push zariyo-main
        run: |
          cp jars/zariyo-main-*.jar zariyo-main/app.jar
          docker build --platform linux/amd64 \
            -t ${{ secrets.DOCKER_USERNAME }}/zariyo-main:latest \
            -f zariyo-main/Dockerfile \
            zariyo-main
          docker push ${{ secrets.DOCKER_USERNAME }}/zariyo-main:latest

      # zariyo-queue Docker 이미지 빌드 및 푸시
      - name: Build & Push zariyo-queue
        run: |
          cp jars/zariyo-queue-*.jar zariyo-queue/app.jar
          docker build --platform linux/amd64 \
            -t ${{ secrets.DOCKER_USERNAME }}/zariyo-queue:latest \
            -f zariyo-queue/Dockerfile \
            zariyo-queue
          docker push ${{ secrets.DOCKER_USERNAME }}/zariyo-queue:latest

      # Naver Cloud 서버에 SSH 배포
      - name: Deploy to Naver Cloud via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.NCP_HOST }}
          username: ${{ secrets.NCP_USER }}
          key: ${{ secrets.NCP_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/zariyo-main:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/zariyo-queue:latest

            docker stop zariyo-main || true && docker rm zariyo-main || true
            docker stop zariyo-queue || true && docker rm zariyo-queue || true

            docker run -d --name zariyo-main \
              -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
              -e DB_USERNAME="${{ secrets.DB_USERNAME }}" \
              -e DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
              -e DB_CLOUD_HOST="${{ secrets.DB_CLOUD_HOST }}" \
              ${{ secrets.DOCKER_USERNAME }}/zariyo-main:latest

            docker run -d --name zariyo-queue \
              -e DB_CLOUD_HOST="${{ secrets.DB_CLOUD_HOST }}" \
              ${{ secrets.DOCKER_USERNAME }}/zariyo-queue:latest

      # Discord 알림 전송
      - name: Notify to Discord
        if: always()
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d '{
              "content": "🚀 CD 완료: `${{ github.workflow }}`\n🔀 브랜치: `${{ github.ref_name }}`\n✅ 상태: `${{ job.status }}`\n🔗 [배포 로그 보기](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
            }' \
            ${{ secrets.DISCORD_WEBHOOK_URL }}
