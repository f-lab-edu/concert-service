name: CD to DockerHub and Naver Cloud

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build JARs
        run: ./gradlew clean build

      - name: Build & Push zariyo-main Docker image
        run: |
          docker buildx build \
            --build-arg JWT_SECRET=${JWT_SECRET} \
            --build-arg DB_USERNAME=${DB_USERNAME} \
            --build-arg DB_PASSWORD=${DB_PASSWORD} \
            -t ${{ secrets.DOCKER_USERNAME }}/zariyo-main:latest ./zariyo-main
          docker push ${{ secrets.DOCKER_USERNAME }}/zariyo-main:latest

      - name: Build & Push zariyo-queue Docker image
        run: |
          docker buildx build \
            -t ${{ secrets.DOCKER_USERNAME }}/zariyo-queue:latest ./zariyo-queue
          docker push ${{ secrets.DOCKER_USERNAME }}/zariyo-queue:latest

      - name: Deploy to Naver Cloud Server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/zariyo-main:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/zariyo-queue:latest

            docker stop zariyo-main || true && docker rm zariyo-main || true
            docker stop zariyo-queue || true && docker rm zariyo-queue || true

            docker run -d --name zariyo-main --network host \
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
              -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              ${{ secrets.DOCKER_USERNAME }}/zariyo-main:latest

            docker run -d --name zariyo-queue --network host \
              ${{ secrets.DOCKER_USERNAME }}/zariyo-queue:latest

      - name: Notify Discord
        if: always()
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d '{
              "content": "üöÄ *CD ÏôÑÎ£å!* `main` Î∏åÎûúÏπòÍ∞Ä DockerHubÏôÄ ÌÅ¥ÎùºÏö∞Îìú ÏÑúÎ≤ÑÏóê Î∞∞Ìè¨ÎêòÏóàÏäµÎãàÎã§.\nüì¶ Ïù¥ÎØ∏ÏßÄ: https://hub.docker.com/u/${{ secrets.DOCKER_USERNAME }}"
            }' \
            ${{ secrets.DISCORD_WEBHOOK_URL }}
